// Code generated by protoc-gen-go.
// source: Login.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 操作结果状态
type Status int32

const (
	Status_SUCCESS Status = 0
	Status_FAIL    Status = 1
)

var Status_name = map[int32]string{
	0: "SUCCESS",
	1: "FAIL",
}
var Status_value = map[string]int32{
	"SUCCESS": 0,
	"FAIL":    1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type LoginRequest struct {
	UserName      string     `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	Password      string     `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	ClientType    ClientType `protobuf:"varint,3,opt,name=client_type,json=clientType,enum=protocol.ClientType" json:"client_type,omitempty"`
	ClientVersion string     `protobuf:"bytes,4,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type LoginResponse struct {
	Status  Status     `protobuf:"varint,1,opt,name=status,enum=protocol.Status" json:"status,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *LoginData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *LoginResponse) GetData() *LoginData {
	if m != nil {
		return m.Data
	}
	return nil
}

type LoginData struct {
	ServerTime uint32 `protobuf:"varint,1,opt,name=server_time,json=serverTime" json:"server_time,omitempty"`
	UserInfo   *Info  `protobuf:"bytes,2,opt,name=user_info,json=userInfo" json:"user_info,omitempty"`
}

func (m *LoginData) Reset()                    { *m = LoginData{} }
func (m *LoginData) String() string            { return proto.CompactTextString(m) }
func (*LoginData) ProtoMessage()               {}
func (*LoginData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *LoginData) GetUserInfo() *Info {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type LogoutRequest struct {
}

func (m *LogoutRequest) Reset()                    { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string            { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()               {}
func (*LogoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type LogoutResponse struct {
	Status  Status `protobuf:"varint,1,opt,name=status,enum=protocol.Status" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *LogoutResponse) Reset()                    { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string            { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()               {}
func (*LogoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func init() {
	proto.RegisterType((*LoginRequest)(nil), "protocol.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "protocol.LoginResponse")
	proto.RegisterType((*LoginData)(nil), "protocol.LoginData")
	proto.RegisterType((*LogoutRequest)(nil), "protocol.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "protocol.LogoutResponse")
	proto.RegisterEnum("protocol.Status", Status_name, Status_value)
}

var fileDescriptor1 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x92, 0xe1, 0x4a, 0xc3, 0x30,
	0x10, 0xc7, 0xad, 0x8e, 0xad, 0xbb, 0xba, 0x3a, 0xa3, 0x42, 0x99, 0x1f, 0x26, 0x05, 0x71, 0x28,
	0xf4, 0x43, 0xc5, 0x07, 0x70, 0x53, 0x71, 0x30, 0x44, 0xda, 0x4d, 0xf0, 0xd3, 0xc8, 0xba, 0x6c,
	0x14, 0xb7, 0xa4, 0x36, 0xa9, 0xa2, 0xf8, 0x3a, 0xbe, 0xa7, 0x59, 0x92, 0xae, 0x2f, 0xe0, 0xa7,
	0xde, 0xfd, 0xfe, 0xc9, 0xdd, 0xff, 0xae, 0x01, 0x67, 0xc4, 0x96, 0x29, 0x0d, 0xb2, 0x9c, 0x09,
	0x86, 0xec, 0xe7, 0xcd, 0x27, 0x61, 0xab, 0x0e, 0xf4, 0x31, 0x27, 0x9a, 0x76, 0x60, 0xc2, 0x49,
	0xae, 0x63, 0xff, 0xd7, 0x82, 0x7d, 0x75, 0x23, 0x22, 0xef, 0x05, 0xe1, 0x02, 0x9d, 0x42, 0xb3,
	0x90, 0xf2, 0x94, 0xe2, 0x35, 0xf1, 0xac, 0x33, 0xab, 0xd7, 0x8c, 0xec, 0x0d, 0x78, 0x92, 0x39,
	0xea, 0x80, 0x9d, 0x61, 0xce, 0x3f, 0x59, 0x3e, 0xf7, 0x76, 0xb5, 0x56, 0xe6, 0xe8, 0x06, 0x9c,
	0x64, 0x95, 0x12, 0x2a, 0xa6, 0xe2, 0x2b, 0x23, 0xde, 0x9e, 0x94, 0xdd, 0xf0, 0x38, 0x28, 0x1d,
	0x04, 0x03, 0x25, 0x8e, 0xa5, 0x16, 0x41, 0xb2, 0x8d, 0xd1, 0x39, 0xb8, 0xe6, 0xda, 0x07, 0xc9,
	0x79, 0xca, 0xa8, 0x57, 0x53, 0x85, 0x5b, 0x9a, 0xbe, 0x68, 0xe8, 0xff, 0x40, 0xcb, 0xd8, 0xe4,
	0x19, 0xa3, 0x9c, 0xa0, 0x1e, 0xd4, 0xb9, 0xc0, 0xa2, 0xe0, 0xca, 0xa4, 0x1b, 0xb6, 0xab, 0x4e,
	0xb1, 0xe2, 0x91, 0xd1, 0x91, 0x07, 0x8d, 0x35, 0xe1, 0x1c, 0x2f, 0x89, 0xf1, 0x5c, 0xa6, 0xe8,
	0x02, 0x6a, 0x73, 0x2c, 0xb0, 0xf2, 0xea, 0x84, 0x47, 0x55, 0x05, 0xd5, 0xea, 0x4e, 0x4a, 0x91,
	0x3a, 0xe0, 0xbf, 0x42, 0x73, 0x8b, 0x50, 0x17, 0x1c, 0xb9, 0x0f, 0xe9, 0x76, 0x2a, 0x52, 0xb3,
	0xa3, 0x56, 0x04, 0x1a, 0x8d, 0x25, 0x41, 0x57, 0x66, 0x85, 0x29, 0x5d, 0x30, 0xd5, 0xd2, 0x09,
	0xdd, 0xaa, 0xf6, 0x50, 0x52, 0xbd, 0xd2, 0x4d, 0xe4, 0x1f, 0xa8, 0xc1, 0x58, 0x21, 0xcc, 0x0f,
	0xf0, 0xc7, 0xe0, 0x96, 0xe0, 0xff, 0x46, 0xbd, 0xec, 0x42, 0x5d, 0x9f, 0x45, 0x0e, 0x34, 0xe2,
	0xc9, 0x60, 0x70, 0x1f, 0xc7, 0xed, 0x1d, 0x64, 0x43, 0xed, 0xe1, 0x76, 0x38, 0x6a, 0x5b, 0xfd,
	0x13, 0x38, 0x4c, 0xd8, 0x3a, 0xf8, 0x0e, 0xde, 0x52, 0xfd, 0x34, 0x66, 0xc5, 0xe2, 0xd1, 0x9a,
	0xd5, 0x55, 0x7c, 0xfd, 0x17, 0x00, 0x00, 0xff, 0xff, 0x53, 0x40, 0xe7, 0x19, 0x57, 0x02, 0x00,
	0x00,
}
