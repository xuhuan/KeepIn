// Code generated by protoc-gen-go.
// source: Message.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MessageData struct {
	FromUid    uint32      `protobuf:"varint,1,opt,name=from_uid,json=fromUid" json:"from_uid,omitempty"`
	ToUid      uint32      `protobuf:"varint,2,opt,name=to_uid,json=toUid" json:"to_uid,omitempty"`
	MsgId      uint32      `protobuf:"varint,3,opt,name=msg_id,json=msgId" json:"msg_id,omitempty"`
	CreateTime uint32      `protobuf:"varint,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	MsgType    MessageType `protobuf:"varint,5,opt,name=msg_type,json=msgType,enum=protocol.Base.MessageType" json:"msg_type,omitempty"`
	MsgData    []byte      `protobuf:"bytes,6,opt,name=msg_data,json=msgData,proto3" json:"msg_data,omitempty"`
	AttachData []byte      `protobuf:"bytes,20,opt,name=attach_data,json=attachData,proto3" json:"attach_data,omitempty"`
}

func (m *MessageData) Reset()                    { *m = MessageData{} }
func (m *MessageData) String() string            { return proto.CompactTextString(m) }
func (*MessageData) ProtoMessage()               {}
func (*MessageData) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func init() {
	proto.RegisterType((*MessageData)(nil), "protocol.Message.MessageData")
}

var fileDescriptor3 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x3c, 0x8e, 0xb1, 0x4e, 0x03, 0x31,
	0x0c, 0x86, 0x75, 0x40, 0xaf, 0x27, 0x97, 0x22, 0x88, 0x40, 0x0a, 0x5d, 0x8a, 0x98, 0x98, 0x32,
	0x80, 0x78, 0x81, 0x8a, 0x01, 0x06, 0x96, 0xaa, 0x2c, 0x2c, 0xa7, 0x34, 0x49, 0x4b, 0x04, 0x51,
	0xaa, 0x8b, 0x3b, 0xc0, 0x23, 0xf3, 0x14, 0x38, 0x4e, 0xe8, 0x94, 0xf8, 0xfb, 0x6c, 0xfd, 0x3f,
	0x4c, 0x5f, 0x5d, 0x4a, 0x7a, 0xeb, 0xd4, 0x6e, 0x88, 0x18, 0xc5, 0x39, 0x3f, 0x26, 0x7e, 0xa9,
	0xca, 0x67, 0xb0, 0xd0, 0xa9, 0xda, 0xdb, 0xdf, 0x06, 0x26, 0x95, 0x3f, 0x69, 0xd4, 0xe2, 0x1a,
	0xba, 0xcd, 0x10, 0x43, 0xbf, 0xf7, 0x56, 0x36, 0x37, 0xcd, 0xdd, 0x74, 0x39, 0xce, 0xf3, 0x9b,
	0xb7, 0xe2, 0x0a, 0x5a, 0x8c, 0x2c, 0x8e, 0x58, 0x8c, 0x30, 0x56, 0x1c, 0xd2, 0xb6, 0x27, 0x7c,
	0x5c, 0x30, 0x4d, 0x2f, 0x56, 0xcc, 0x61, 0x62, 0x06, 0xa7, 0xd1, 0xf5, 0xe8, 0x83, 0x93, 0x27,
	0xec, 0xa0, 0xa0, 0x15, 0x11, 0xf1, 0x08, 0x5d, 0xbe, 0xc3, 0xef, 0x9d, 0x93, 0x23, 0xb2, 0x67,
	0xf7, 0x33, 0x75, 0xa8, 0xca, 0x0d, 0x6b, 0xaf, 0x15, 0x6d, 0x2c, 0xc7, 0xb4, 0x9b, 0x3f, 0xb9,
	0x60, 0x3e, 0xb3, 0x54, 0x56, 0xb6, 0x74, 0x76, 0xca, 0x8a, 0xbb, 0x53, 0xa4, 0x46, 0xd4, 0xe6,
	0xa3, 0xd8, 0x4b, 0xb6, 0x50, 0x50, 0x5e, 0x58, 0xcc, 0xe1, 0xc2, 0xc4, 0xa0, 0x7e, 0xd4, 0xa7,
	0x2f, 0x51, 0xeb, 0xfd, 0xe6, 0xb9, 0x79, 0xef, 0xfe, 0x63, 0xd7, 0x2d, 0xff, 0x1e, 0xfe, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x12, 0x85, 0x68, 0xab, 0x43, 0x01, 0x00, 0x00,
}
