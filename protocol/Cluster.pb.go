// Code generated by protoc-gen-go.
// source: Cluster.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 请求操作类型
type ClusterActionType int32

const (
	ClusterActionType_UNKNOWN     ClusterActionType = 0
	ClusterActionType_REG_SERVER  ClusterActionType = 1
	ClusterActionType_GET_SERVERS ClusterActionType = 2
)

var ClusterActionType_name = map[int32]string{
	0: "UNKNOWN",
	1: "REG_SERVER",
	2: "GET_SERVERS",
}
var ClusterActionType_value = map[string]int32{
	"UNKNOWN":     0,
	"REG_SERVER":  1,
	"GET_SERVERS": 2,
}

func (x ClusterActionType) String() string {
	return proto.EnumName(ClusterActionType_name, int32(x))
}
func (ClusterActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// 服务器类型
type ClusterServerType int32

const (
	ClusterServerType_LOGIN   ClusterServerType = 0
	ClusterServerType_ROUTE   ClusterServerType = 1
	ClusterServerType_MESSAGE ClusterServerType = 2
	ClusterServerType_DB      ClusterServerType = 3
	ClusterServerType_PUSH    ClusterServerType = 4
	ClusterServerType_FILE    ClusterServerType = 5
	ClusterServerType_CLUSTER ClusterServerType = 6
)

var ClusterServerType_name = map[int32]string{
	0: "LOGIN",
	1: "ROUTE",
	2: "MESSAGE",
	3: "DB",
	4: "PUSH",
	5: "FILE",
	6: "CLUSTER",
}
var ClusterServerType_value = map[string]int32{
	"LOGIN":   0,
	"ROUTE":   1,
	"MESSAGE": 2,
	"DB":      3,
	"PUSH":    4,
	"FILE":    5,
	"CLUSTER": 6,
}

func (x ClusterServerType) String() string {
	return proto.EnumName(ClusterServerType_name, int32(x))
}
func (ClusterServerType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

// 请求
type ClusterRequest struct {
	Act        ClusterActionType    `protobuf:"varint,1,opt,name=act,enum=protocol.Cluster.ClusterActionType" json:"act,omitempty"`
	Data       []*ClusterServerInfo `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	ServerType []ClusterServerType  `protobuf:"varint,3,rep,name=serverType,enum=protocol.Cluster.ClusterServerType" json:"serverType,omitempty"`
}

func (m *ClusterRequest) Reset()                    { *m = ClusterRequest{} }
func (m *ClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*ClusterRequest) ProtoMessage()               {}
func (*ClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ClusterRequest) GetData() []*ClusterServerInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

// 请求
type ClusterResponse struct {
	Status Status               `protobuf:"varint,1,opt,name=status,enum=protocol.Base.Status" json:"status,omitempty"`
	Data   []*ClusterServerInfo `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
}

func (m *ClusterResponse) Reset()                    { *m = ClusterResponse{} }
func (m *ClusterResponse) String() string            { return proto.CompactTextString(m) }
func (*ClusterResponse) ProtoMessage()               {}
func (*ClusterResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ClusterResponse) GetData() []*ClusterServerInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type ClusterServerInfo struct {
	Uuid        string            `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Type        ClusterServerType `protobuf:"varint,2,opt,name=type,enum=protocol.Cluster.ClusterServerType" json:"type,omitempty"`
	Ip          string            `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	Port        int32             `protobuf:"varint,4,opt,name=port" json:"port,omitempty"`
	CurrentLoad int32             `protobuf:"varint,5,opt,name=currentLoad" json:"currentLoad,omitempty"`
}

func (m *ClusterServerInfo) Reset()                    { *m = ClusterServerInfo{} }
func (m *ClusterServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ClusterServerInfo) ProtoMessage()               {}
func (*ClusterServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func init() {
	proto.RegisterType((*ClusterRequest)(nil), "protocol.Cluster.ClusterRequest")
	proto.RegisterType((*ClusterResponse)(nil), "protocol.Cluster.ClusterResponse")
	proto.RegisterType((*ClusterServerInfo)(nil), "protocol.Cluster.ClusterServerInfo")
	proto.RegisterEnum("protocol.Cluster.ClusterActionType", ClusterActionType_name, ClusterActionType_value)
	proto.RegisterEnum("protocol.Cluster.ClusterServerType", ClusterServerType_name, ClusterServerType_value)
}

var fileDescriptor1 = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x51, 0xdd, 0x6a, 0xd4, 0x40,
	0x18, 0x35, 0xbf, 0xb6, 0x5f, 0x30, 0x9d, 0x0e, 0x08, 0xc1, 0x1b, 0x97, 0xf5, 0xa6, 0x14, 0xcc,
	0x85, 0x22, 0x5e, 0xef, 0xae, 0x63, 0xba, 0x18, 0x77, 0x65, 0x26, 0x51, 0xf0, 0xa6, 0xa4, 0xd9,
	0x29, 0x04, 0x6b, 0x26, 0x66, 0x26, 0x42, 0x7d, 0x20, 0xdf, 0xc4, 0xf7, 0x72, 0x66, 0x9a, 0xb6,
	0xcb, 0x0a, 0x2e, 0xf4, 0x6a, 0x4e, 0xbe, 0x6f, 0xce, 0x39, 0x73, 0x4e, 0xe0, 0xc9, 0xe2, 0x6a,
	0x90, 0x8a, 0xf7, 0x69, 0xd7, 0x0b, 0x25, 0x30, 0xb2, 0x47, 0x2d, 0xae, 0xd2, 0x71, 0xfe, 0x0c,
	0xe6, 0x95, 0xe4, 0x37, 0xdb, 0xe9, 0x1f, 0x07, 0xe2, 0x71, 0x4e, 0xf9, 0x8f, 0x81, 0x4b, 0x85,
	0xdf, 0x80, 0x57, 0xd5, 0x2a, 0x71, 0x26, 0xce, 0x49, 0xfc, 0xea, 0x45, 0xba, 0x4b, 0xbf, 0x3d,
	0x67, 0xb5, 0x6a, 0x44, 0x5b, 0x5c, 0x77, 0x9c, 0x9a, 0xfb, 0xf8, 0x2d, 0xf8, 0x9b, 0x4a, 0x55,
	0x89, 0x3b, 0xf1, 0x4e, 0xa2, 0xff, 0xf0, 0x18, 0xef, 0x7f, 0xf2, 0x7e, 0xd9, 0x5e, 0x0a, 0x6a,
	0x09, 0x78, 0x01, 0x20, 0xed, 0xcc, 0x68, 0x25, 0x9e, 0xa6, 0xc7, 0x7b, 0xe9, 0xd6, 0x76, 0x8b,
	0x36, 0xbd, 0x86, 0xa3, 0xbb, 0x18, 0xb2, 0x13, 0xad, 0xe4, 0xf8, 0x25, 0x84, 0x52, 0x55, 0x6a,
	0x90, 0x63, 0x94, 0xa7, 0xf7, 0x9a, 0xb6, 0x00, 0x66, 0x97, 0x74, 0xbc, 0xf4, 0xe0, 0xf7, 0x4f,
	0x7f, 0x3b, 0x70, 0xfc, 0xcf, 0x0e, 0x63, 0xf0, 0x87, 0xa1, 0xd9, 0x58, 0xef, 0x43, 0x6a, 0xb1,
	0xb1, 0x50, 0x26, 0xa3, 0xbb, 0xa7, 0xda, 0xad, 0x8c, 0x96, 0x80, 0x63, 0x70, 0x9b, 0x4e, 0x57,
	0x63, 0xa4, 0x34, 0x32, 0xe2, 0x9d, 0xe8, 0x55, 0xe2, 0xeb, 0x49, 0x40, 0x2d, 0xc6, 0x13, 0x88,
	0xea, 0xa1, 0xef, 0x79, 0xab, 0x72, 0x51, 0x6d, 0x92, 0xc0, 0xae, 0xb6, 0x47, 0xa7, 0xb3, 0xbb,
	0x77, 0xde, 0xff, 0x3b, 0x1c, 0xc1, 0xe3, 0x72, 0xf5, 0x61, 0xb5, 0xfe, 0xb2, 0x42, 0x8f, 0xb4,
	0x0f, 0x50, 0x92, 0x9d, 0x33, 0x42, 0x3f, 0x13, 0x8a, 0x1c, 0x7c, 0x04, 0x51, 0x46, 0x8a, 0xf1,
	0x9b, 0x21, 0xf7, 0xf4, 0x7c, 0x27, 0xaa, 0x95, 0x38, 0x84, 0x20, 0x5f, 0x67, 0x4b, 0x23, 0xa0,
	0x21, 0x5d, 0x97, 0x05, 0xd1, 0x5c, 0x2d, 0xfc, 0x91, 0x30, 0x36, 0xcb, 0x08, 0x72, 0x71, 0x08,
	0xee, 0xbb, 0x39, 0xf2, 0xf0, 0x01, 0xf8, 0x9f, 0x4a, 0x76, 0x86, 0x7c, 0x83, 0xde, 0x2f, 0x73,
	0x82, 0x02, 0x73, 0x71, 0x91, 0x97, 0xac, 0xd0, 0x8e, 0xe1, 0xfc, 0x39, 0x1c, 0xd7, 0xe2, 0x7b,
	0xfa, 0x2b, 0xfd, 0xd6, 0xdc, 0xd4, 0x73, 0x31, 0x5c, 0x9e, 0x39, 0x5f, 0x0f, 0x6e, 0xab, 0xba,
	0x08, 0x2d, 0x7a, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x12, 0x45, 0x9d, 0xc1, 0xe6, 0x02, 0x00,
	0x00,
}
