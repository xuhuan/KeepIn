// Code generated by protoc-gen-go.
// source: Cluster.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 请求操作类型
type ClusterActionType int32

const (
	ClusterActionType_REGIST_SERVER ClusterActionType = 0
	ClusterActionType_GET_SERVERS   ClusterActionType = 1
)

var ClusterActionType_name = map[int32]string{
	0: "REGIST_SERVER",
	1: "GET_SERVERS",
}
var ClusterActionType_value = map[string]int32{
	"REGIST_SERVER": 0,
	"GET_SERVERS":   1,
}

func (x ClusterActionType) String() string {
	return proto.EnumName(ClusterActionType_name, int32(x))
}
func (ClusterActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// 服务器类型
type ClusterServerType int32

const (
	ClusterServerType_LOGIN   ClusterServerType = 0
	ClusterServerType_ROUTE   ClusterServerType = 1
	ClusterServerType_MESSAGE ClusterServerType = 2
	ClusterServerType_DB      ClusterServerType = 3
	ClusterServerType_PUSH    ClusterServerType = 4
	ClusterServerType_FILE    ClusterServerType = 5
	ClusterServerType_CLUSTER ClusterServerType = 6
)

var ClusterServerType_name = map[int32]string{
	0: "LOGIN",
	1: "ROUTE",
	2: "MESSAGE",
	3: "DB",
	4: "PUSH",
	5: "FILE",
	6: "CLUSTER",
}
var ClusterServerType_value = map[string]int32{
	"LOGIN":   0,
	"ROUTE":   1,
	"MESSAGE": 2,
	"DB":      3,
	"PUSH":    4,
	"FILE":    5,
	"CLUSTER": 6,
}

func (x ClusterServerType) String() string {
	return proto.EnumName(ClusterServerType_name, int32(x))
}
func (ClusterServerType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

// 操作结果状态
type Status int32

const (
	Status_FAIL    Status = 0
	Status_SUCCESS Status = 1
)

var Status_name = map[int32]string{
	0: "FAIL",
	1: "SUCCESS",
}
var Status_value = map[string]int32{
	"FAIL":    0,
	"SUCCESS": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

// 请求
type ClusterRequest struct {
	Act  ClusterActionType    `protobuf:"varint,1,opt,name=act,enum=protocol.Cluster.ClusterActionType" json:"act,omitempty"`
	Data []*ClusterServerInfo `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
}

func (m *ClusterRequest) Reset()                    { *m = ClusterRequest{} }
func (m *ClusterRequest) String() string            { return proto.CompactTextString(m) }
func (*ClusterRequest) ProtoMessage()               {}
func (*ClusterRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ClusterRequest) GetData() []*ClusterServerInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type ClusterServerInfo struct {
	Type ClusterServerType `protobuf:"varint,1,opt,name=type,enum=protocol.Cluster.ClusterServerType" json:"type,omitempty"`
	Ip   string            `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
	Port int32             `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
}

func (m *ClusterServerInfo) Reset()                    { *m = ClusterServerInfo{} }
func (m *ClusterServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ClusterServerInfo) ProtoMessage()               {}
func (*ClusterServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type LoginRequest struct {
	UserName      string     `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	Password      string     `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	ClientType    ClientType `protobuf:"varint,3,opt,name=client_type,json=clientType,enum=protocol.Base.ClientType" json:"client_type,omitempty"`
	ClientVersion string     `protobuf:"bytes,4,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type LoginResponse struct {
	Status  Status     `protobuf:"varint,1,opt,name=status,enum=protocol.Cluster.Status" json:"status,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *LoginData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *LoginResponse) GetData() *LoginData {
	if m != nil {
		return m.Data
	}
	return nil
}

type LoginData struct {
	ServerTime uint32    `protobuf:"varint,1,opt,name=server_time,json=serverTime" json:"server_time,omitempty"`
	UserInfo   *UserInfo `protobuf:"bytes,2,opt,name=user_info,json=userInfo" json:"user_info,omitempty"`
}

func (m *LoginData) Reset()                    { *m = LoginData{} }
func (m *LoginData) String() string            { return proto.CompactTextString(m) }
func (*LoginData) ProtoMessage()               {}
func (*LoginData) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *LoginData) GetUserInfo() *UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type LogoutRequest struct {
}

func (m *LogoutRequest) Reset()                    { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string            { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()               {}
func (*LogoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

type LogoutResponse struct {
	Status  Status `protobuf:"varint,1,opt,name=status,enum=protocol.Cluster.Status" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *LogoutResponse) Reset()                    { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string            { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()               {}
func (*LogoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func init() {
	proto.RegisterType((*ClusterRequest)(nil), "protocol.Cluster.ClusterRequest")
	proto.RegisterType((*ClusterServerInfo)(nil), "protocol.Cluster.ClusterServerInfo")
	proto.RegisterType((*LoginRequest)(nil), "protocol.Cluster.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "protocol.Cluster.LoginResponse")
	proto.RegisterType((*LoginData)(nil), "protocol.Cluster.LoginData")
	proto.RegisterType((*LogoutRequest)(nil), "protocol.Cluster.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "protocol.Cluster.LogoutResponse")
	proto.RegisterEnum("protocol.Cluster.ClusterActionType", ClusterActionType_name, ClusterActionType_value)
	proto.RegisterEnum("protocol.Cluster.ClusterServerType", ClusterServerType_name, ClusterServerType_value)
	proto.RegisterEnum("protocol.Cluster.Status", Status_name, Status_value)
}

var fileDescriptor1 = []byte{
	// 549 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x49, 0x9a, 0x26, 0x63, 0x92, 0x3a, 0x7b, 0xc1, 0xa4, 0x87, 0x54, 0x46, 0x48, 0x51,
	0x0e, 0x01, 0x05, 0x50, 0x25, 0x6e, 0x49, 0x6a, 0xd2, 0x48, 0xa1, 0x45, 0xeb, 0xa4, 0x07, 0x84,
	0x64, 0x39, 0xee, 0xb6, 0xb2, 0x48, 0xbc, 0xc6, 0xbb, 0x06, 0xc1, 0x89, 0x0f, 0xe0, 0x4b, 0xf8,
	0x4a, 0xd6, 0xe3, 0x75, 0x22, 0x35, 0x12, 0x5c, 0xb8, 0xd8, 0xb3, 0x6f, 0xdf, 0xcc, 0xbe, 0x79,
	0x33, 0xd0, 0x9a, 0x6e, 0x32, 0x21, 0x59, 0x3a, 0x4c, 0x52, 0x2e, 0x39, 0xb1, 0xf0, 0x17, 0xf2,
	0xcd, 0x50, 0xe3, 0x5d, 0x98, 0x04, 0x82, 0x15, 0xb7, 0x5d, 0x58, 0x89, 0x92, 0xe9, 0xfc, 0x34,
	0xa0, 0xad, 0x39, 0x94, 0x7d, 0xc9, 0x98, 0x90, 0xe4, 0x0d, 0x54, 0x83, 0x50, 0xda, 0xc6, 0x99,
	0xd1, 0x6f, 0x8f, 0x9e, 0x0d, 0x1f, 0x96, 0x2a, 0xff, 0xe3, 0x50, 0x46, 0x3c, 0x5e, 0x7e, 0x4f,
	0x18, 0xcd, 0xf9, 0xe4, 0x1c, 0x6a, 0xb7, 0x81, 0x0c, 0xec, 0xca, 0x59, 0xb5, 0x6f, 0xfe, 0x25,
	0xcf, 0x63, 0xe9, 0x57, 0x96, 0xce, 0xe3, 0x3b, 0x4e, 0x31, 0xc1, 0x49, 0xa0, 0x73, 0x70, 0x95,
	0x57, 0x93, 0xaa, 0xf4, 0x3f, 0x55, 0x14, 0x29, 0xa8, 0x02, 0x13, 0x48, 0x1b, 0x2a, 0x51, 0xa2,
	0x44, 0x18, 0xfd, 0x26, 0x55, 0x11, 0x21, 0x50, 0x4b, 0x78, 0x2a, 0xed, 0xaa, 0x42, 0x8e, 0x28,
	0xc6, 0xce, 0x6f, 0x03, 0x1e, 0x2f, 0xf8, 0x7d, 0x14, 0x97, 0x2d, 0x9f, 0x42, 0x33, 0x53, 0x9e,
	0xf8, 0x71, 0xb0, 0x2d, 0x9e, 0x6c, 0xd2, 0x46, 0x0e, 0x5c, 0xa9, 0x33, 0xe9, 0x42, 0x23, 0x09,
	0x84, 0xf8, 0xc6, 0xd3, 0x5b, 0x5d, 0x77, 0x77, 0x26, 0x6f, 0xc1, 0x0c, 0x37, 0x11, 0x8b, 0xa5,
	0x8f, 0x6a, 0xab, 0xa8, 0xf6, 0xe9, 0x5e, 0x2d, 0xba, 0x3e, 0x45, 0x06, 0x6a, 0x84, 0x70, 0x17,
	0x93, 0xe7, 0xd0, 0xd6, 0xb9, 0xaa, 0x03, 0xa1, 0xbc, 0xb4, 0x6b, 0x58, 0xbd, 0x55, 0xa0, 0x37,
	0x05, 0xe8, 0xfc, 0x32, 0xa0, 0xa5, 0xc5, 0x8a, 0x84, 0xc7, 0x82, 0x91, 0x97, 0x50, 0x17, 0x32,
	0x90, 0x99, 0xd0, 0xee, 0xd8, 0x87, 0xee, 0x78, 0x78, 0x4f, 0x35, 0x8f, 0xd8, 0x70, 0xbc, 0x65,
	0x42, 0x04, 0xf7, 0x4c, 0x77, 0x50, 0x1e, 0xc9, 0x0b, 0x3d, 0xb5, 0x5c, 0xb9, 0x39, 0x3a, 0x3d,
	0xac, 0x84, 0x4f, 0x5f, 0x28, 0x8a, 0x9e, 0xd6, 0x1a, 0x9a, 0x3b, 0x88, 0xf4, 0xc0, 0x14, 0x38,
	0x00, 0x5f, 0x46, 0xda, 0xb9, 0x16, 0x85, 0x02, 0x5a, 0x2a, 0x84, 0xbc, 0xd6, 0xc6, 0x46, 0x6a,
	0xa6, 0xf8, 0xb4, 0x39, 0x7a, 0xb2, 0x7f, 0x03, 0xf7, 0x30, 0xff, 0xe0, 0x36, 0xa0, 0xe3, 0x79,
	0xe4, 0x9c, 0x60, 0xc7, 0x3c, 0x93, 0x7a, 0x3e, 0xce, 0x27, 0x68, 0x97, 0xc0, 0xff, 0xf7, 0x60,
	0x70, 0xbe, 0x5b, 0xc0, 0xfd, 0x4e, 0x93, 0x0e, 0xb4, 0xa8, 0x3b, 0x9b, 0x7b, 0x4b, 0xdf, 0x73,
	0xe9, 0x8d, 0x4b, 0xad, 0x47, 0xe4, 0x04, 0xcc, 0x99, 0x5b, 0x9e, 0x3d, 0xcb, 0x18, 0xf8, 0x0f,
	0x36, 0x17, 0x13, 0x9b, 0x70, 0xb4, 0xb8, 0x9e, 0xcd, 0xaf, 0x54, 0x82, 0x0a, 0xe9, 0xf5, 0x6a,
	0xe9, 0x5a, 0x06, 0x31, 0xe1, 0xf8, 0xbd, 0xeb, 0x79, 0xe3, 0x99, 0x6b, 0x55, 0x48, 0x1d, 0x2a,
	0x17, 0x13, 0xab, 0x4a, 0x1a, 0x50, 0xfb, 0xb0, 0xf2, 0x2e, 0xad, 0x5a, 0x1e, 0xbd, 0x9b, 0x2f,
	0x5c, 0xeb, 0x28, 0x27, 0x4e, 0x17, 0x2b, 0x6f, 0xa9, 0x5e, 0xac, 0x0f, 0x7a, 0x50, 0x2f, 0xba,
	0x40, 0xc2, 0x78, 0xbe, 0x50, 0x45, 0x15, 0xc1, 0x5b, 0x4d, 0xa7, 0xaa, 0x98, 0x65, 0x4c, 0x7a,
	0xd0, 0x09, 0xf9, 0x76, 0xf8, 0x63, 0xf8, 0x39, 0x2a, 0x0c, 0x58, 0x67, 0x77, 0x97, 0xc6, 0xc7,
	0x46, 0x69, 0xc6, 0xba, 0x8e, 0xd1, 0xab, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x2a, 0xce,
	0xde, 0x21, 0x04, 0x00, 0x00,
}
