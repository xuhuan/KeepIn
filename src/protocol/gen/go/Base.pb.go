// Code generated by protoc-gen-go.
// source: Base.proto
// DO NOT EDIT!

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	Base.proto
	Cluster.proto
	Login.proto
	Message.proto
	Other.proto
	TransferService.proto
	User.proto

It has these top-level messages:
	ServerInfo
	ClusterRequest
	ClusterResponse
	LoginRequest
	LoginResponse
	LoginData
	LogoutRequest
	LogoutResponse
	MessageData
	HeartBeat
	TransferMsg
	UserInfo
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// 消息类型
type MessageType int32

const (
	MessageType_SINGLE_TEXT MessageType = 0
)

var MessageType_name = map[int32]string{
	0: "SINGLE_TEXT",
}
var MessageType_value = map[string]int32{
	"SINGLE_TEXT": 0,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 客户端类型
type ClientType int32

const (
	ClientType_WEB     ClientType = 0
	ClientType_ANDROID ClientType = 1
	ClientType_IOS     ClientType = 2
	ClientType_MAC     ClientType = 3
	ClientType_WAP     ClientType = 4
	ClientType_WEIXIN  ClientType = 5
	ClientType_WINDOWS ClientType = 6
)

var ClientType_name = map[int32]string{
	0: "WEB",
	1: "ANDROID",
	2: "IOS",
	3: "MAC",
	4: "WAP",
	5: "WEIXIN",
	6: "WINDOWS",
}
var ClientType_value = map[string]int32{
	"WEB":     0,
	"ANDROID": 1,
	"IOS":     2,
	"MAC":     3,
	"WAP":     4,
	"WEIXIN":  5,
	"WINDOWS": 6,
}

func (x ClientType) String() string {
	return proto.EnumName(ClientType_name, int32(x))
}
func (ClientType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 操作结果状态
type Status int32

const (
	Status_FAIL    Status = 0
	Status_SUCCESS Status = 1
)

var Status_name = map[int32]string{
	0: "FAIL",
	1: "SUCCESS",
}
var Status_value = map[string]int32{
	"FAIL":    0,
	"SUCCESS": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// 服务器类型
type ServerType int32

const (
	ServerType_LOGIN   ServerType = 0
	ServerType_ROUTE   ServerType = 1
	ServerType_MESSAGE ServerType = 2
	ServerType_DB      ServerType = 3
	ServerType_PUSH    ServerType = 4
	ServerType_FILE    ServerType = 5
	ServerType_CLUSTER ServerType = 6
)

var ServerType_name = map[int32]string{
	0: "LOGIN",
	1: "ROUTE",
	2: "MESSAGE",
	3: "DB",
	4: "PUSH",
	5: "FILE",
	6: "CLUSTER",
}
var ServerType_value = map[string]int32{
	"LOGIN":   0,
	"ROUTE":   1,
	"MESSAGE": 2,
	"DB":      3,
	"PUSH":    4,
	"FILE":    5,
	"CLUSTER": 6,
}

func (x ServerType) String() string {
	return proto.EnumName(ServerType_name, int32(x))
}
func (ServerType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ServerInfo struct {
	Type              ServerType `protobuf:"varint,1,opt,name=type,enum=protocol.Base.ServerType" json:"type,omitempty"`
	Ip                string     `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
	Port              int32      `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	CurrentLoad       int32      `protobuf:"varint,4,opt,name=currentLoad" json:"currentLoad,omitempty"`
	LastHeartbeatTime string     `protobuf:"bytes,5,opt,name=lastHeartbeatTime" json:"lastHeartbeatTime,omitempty"`
}

func (m *ServerInfo) Reset()                    { *m = ServerInfo{} }
func (m *ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()               {}
func (*ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*ServerInfo)(nil), "protocol.Base.ServerInfo")
	proto.RegisterEnum("protocol.Base.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("protocol.Base.ClientType", ClientType_name, ClientType_value)
	proto.RegisterEnum("protocol.Base.Status", Status_name, Status_value)
	proto.RegisterEnum("protocol.Base.ServerType", ServerType_name, ServerType_value)
}

var fileDescriptor0 = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x91, 0xcf, 0xce, 0x93, 0x40,
	0x14, 0xc5, 0x0b, 0x05, 0xbe, 0xf6, 0x12, 0xeb, 0x74, 0x56, 0xb8, 0xb1, 0x8d, 0x2b, 0x43, 0x94,
	0x85, 0x3e, 0x01, 0x7f, 0xc6, 0x76, 0x12, 0x0a, 0x0d, 0x03, 0xd2, 0xb8, 0x31, 0xb4, 0x4e, 0x0d,
	0xb1, 0x2d, 0x04, 0xa6, 0x26, 0xfa, 0x52, 0xbe, 0xa2, 0xc3, 0x90, 0x26, 0x9a, 0x6f, 0xc5, 0xc9,
	0xb9, 0xbf, 0x7b, 0x0e, 0x99, 0x0b, 0x10, 0x54, 0x3d, 0xf7, 0xda, 0xae, 0x11, 0x0d, 0x7e, 0xa1,
	0x3e, 0xa7, 0xe6, 0xe2, 0x0d, 0xe6, 0x9b, 0x3f, 0x1a, 0x00, 0xe3, 0xdd, 0x4f, 0xde, 0xd1, 0xdb,
	0xb9, 0xc1, 0xef, 0xc1, 0x10, 0xbf, 0x5a, 0xee, 0x68, 0x6b, 0xed, 0xed, 0xe2, 0xc3, 0x2b, 0xef,
	0x3f, 0xd8, 0x1b, 0xc1, 0x5c, 0x02, 0x99, 0xc2, 0xf0, 0x02, 0xf4, 0xba, 0x75, 0x74, 0x09, 0xcf,
	0x33, 0xa9, 0x30, 0x06, 0xa3, 0x6d, 0x3a, 0xe1, 0x4c, 0xa5, 0x63, 0x66, 0x4a, 0xe3, 0x35, 0xd8,
	0xa7, 0x7b, 0xd7, 0xf1, 0x9b, 0x88, 0x9b, 0xea, 0x9b, 0x63, 0xa8, 0xd1, 0xbf, 0x16, 0x7e, 0x07,
	0xcb, 0x4b, 0xd5, 0x8b, 0x2d, 0xaf, 0x3a, 0x71, 0xe4, 0x95, 0xc8, 0xeb, 0x2b, 0x77, 0x4c, 0x15,
	0xfa, 0x7c, 0xe0, 0xbe, 0x06, 0x7b, 0xc7, 0xfb, 0xbe, 0xfa, 0xce, 0x87, 0x1f, 0xc1, 0x2f, 0xc1,
	0x66, 0x34, 0xd9, 0xc4, 0xe4, 0x6b, 0x4e, 0x0e, 0x39, 0x9a, 0xb8, 0x9f, 0x01, 0xc2, 0x4b, 0x2d,
	0xb3, 0xd5, 0xf8, 0x09, 0xa6, 0x25, 0x09, 0xd0, 0x04, 0xdb, 0xf0, 0xe4, 0x27, 0x51, 0x96, 0xd2,
	0x08, 0x69, 0x83, 0x4b, 0x53, 0x86, 0xf4, 0x41, 0xec, 0xfc, 0x10, 0x4d, 0x15, 0xe7, 0xef, 0x91,
	0x81, 0x01, 0xac, 0x92, 0xd0, 0x03, 0x4d, 0x90, 0x39, 0xec, 0x94, 0x34, 0x89, 0xd2, 0x92, 0x21,
	0xcb, 0x5d, 0x81, 0xc5, 0x44, 0x25, 0xee, 0x3d, 0x9e, 0x81, 0xf1, 0xc9, 0xa7, 0xf1, 0x18, 0xca,
	0x8a, 0x30, 0x24, 0x8c, 0x21, 0xcd, 0x3d, 0x3c, 0x5e, 0x52, 0x15, 0xcf, 0xc1, 0x8c, 0xd3, 0x8d,
	0x8c, 0x99, 0x0c, 0x32, 0x4b, 0x8b, 0x9c, 0xc8, 0x62, 0xb9, 0xb0, 0x93, 0xb4, 0xbf, 0x21, 0xb2,
	0xdc, 0x02, 0x3d, 0x0a, 0x64, 0xb7, 0xcc, 0xdb, 0x17, 0x6c, 0x2b, 0xcb, 0x87, 0x64, 0x1a, 0x93,
	0xb1, 0x3a, 0x8c, 0x0b, 0x96, 0x93, 0x0c, 0x59, 0xc1, 0x0a, 0x96, 0xa7, 0xe6, 0xea, 0xfd, 0xf6,
	0x7e, 0xd4, 0xe3, 0x45, 0x8e, 0xf7, 0xf3, 0x56, 0xfb, 0x32, 0x7b, 0x5c, 0xe7, 0x68, 0x29, 0xf5,
	0xf1, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x0c, 0xd1, 0x70, 0xe9, 0x01, 0x00, 0x00,
}
